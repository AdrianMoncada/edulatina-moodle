/**
 * Typeform Handler functionality for Edwiser Video Format.
 *
 * @module     format_edwiservideoformat/typeform_handler
 * @copyright  Edwiser
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("format_edwiservideoformat/typeform_handler",["jquery"],(function($){const SELECTORS_TYPEFORM_BUTTON=".evf-typeform-init-button",CONFIG_TRIGGER_TIME=12e4,CONFIG_CHECK_INTERVAL=1e3,CONFIG_STORAGE_KEY="typeform_timer_data";let startTime=null,timerInterval=null,isTriggered=!1;const storeTimerData=data=>{try{localStorage.setItem(CONFIG_STORAGE_KEY,JSON.stringify(data))}catch(error){}},initializeTimer=()=>{const storedData=(()=>{try{const stored=localStorage.getItem(CONFIG_STORAGE_KEY);return stored?JSON.parse(stored):null}catch(error){return null}})();storedData&&!storedData.isTriggered?(startTime=storedData.startTime,isTriggered=storedData.isTriggered):(startTime=Date.now(),isTriggered=!1),storeTimerData({startTime:startTime,isTriggered:isTriggered})},startTimer=()=>{timerInterval=setInterval((()=>{checkTime()}),CONFIG_CHECK_INTERVAL)},checkTime=()=>{if(isTriggered)return;const timeSpent=Date.now()-startTime;storeTimerData({startTime:startTime,isTriggered:isTriggered}),timeSpent>=CONFIG_TRIGGER_TIME&&triggerTypeform()},triggerTypeform=()=>{isTriggered=!0,storeTimerData({startTime:startTime,isTriggered:isTriggered});const typeformButton=$(SELECTORS_TYPEFORM_BUTTON);typeformButton.length>0&&(typeformButton.trigger("click"),stopTimer())},stopTimer=()=>{timerInterval&&(clearInterval(timerInterval),timerInterval=null)};return{init:function(){$(document).ready((function(){initializeTimer(),startTimer()}))},getTimeSpent:()=>Date.now()-startTime,resetTimer:()=>{stopTimer(),(()=>{try{localStorage.removeItem(CONFIG_STORAGE_KEY)}catch(error){}})(),startTime=Date.now(),isTriggered=!1,storeTimerData({startTime:startTime,isTriggered:isTriggered}),startTimer()},trigger:triggerTypeform}}));

//# sourceMappingURL=typeform_handler.min.js.map